import React, { useRef } from 'react';

const Sidebar = ({ 
  currentView, setCurrentView, chatSessions, currentSession, 
  setCurrentSession, createNewSession, deleteSession, loadMessages, documents,
  uploadDocument, deleteDocument, uploadProgress 
}) => {
  const fileInputRef = useRef(null);

  const handleFileUpload = async (event) => {
    const files = Array.from(event.target.files);
    if (files.length === 0) return;

    try {
      for (const file of files) {
        if (file.type === 'application/pdf') {
          await uploadDocument(file);
        }
      }
    } catch (error) {
      console.error('Error uploading files:', error);
      alert('Upload failed: ' + error.message);
    }
    
    // Reset the input
    event.target.value = '';
  };

  return (
    <div className="w-full h-full flex flex-col bg-gray-50 border-r border-gray-200">
      {/* Header */}
      <div className="p-4 border-b border-gray-200">
        <button
          onClick={createNewSession}
          className="w-full flex items-center justify-center space-x-2 px-4 py-3 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200 text-sm font-medium text-gray-700"
        >
          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
          </svg>
          <span>New Chat</span>
        </button>
      </div>

          <div className="px-6 pb-6">
            <h3 className="text-sm font-bold uppercase tracking-wider mb-4" 
                style={{ 
                  color: 'var(--text-tertiary)', 
                  fontFamily: 'Poppins, sans-serif',
                  fontSize: '11px',
                  letterSpacing: '1px'
                }}>
              Recent Conversations
            </h3>
            <div className="space-y-3">
              {chatSessions.map((session) => (
                <div
                  key={session.id}
                  className={`group relative p-4 rounded-2xl cursor-pointer transition-all duration-300 card ${
                    currentSession?.id === session.id
                      ? 'shadow-md' 
                      : 'hover:shadow-md'
                  }`}
                  style={{
                    background: currentSession?.id === session.id 
                      ? 'linear-gradient(135deg, var(--emerald-50), var(--emerald-100))' 
                      : 'var(--bg-primary)',
                    borderColor: currentSession?.id === session.id ? 'var(--emerald-200)' : 'var(--gray-200)'
                  }}
                >
                  <div onClick={() => {
                    setCurrentSession(session);
                    loadMessages(session.id);
                  }}>
                    <div className="font-semibold text-base truncate pr-10 mb-2" 
                         style={{ color: 'var(--text-primary)' }}>
                      {session.session_name}
                    </div>
                    <div className="flex items-center space-x-2">
                      <div className="text-xs px-2 py-1 rounded-full" 
                           style={{ 
                             background: 'var(--emerald-100)', 
                             color: 'var(--emerald-700)',
                             border: '1px solid var(--emerald-200)'
                           }}>
                        {new Date(session.created_at).toLocaleDateString()}
                      </div>
                    </div>
                  </div>
                  
                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      deleteSession(session.id);
                    }}
                    className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 p-2 rounded-lg transition-all duration-200 hover:shadow-sm focus-emerald"
                    style={{ 
                      background: 'var(--bg-primary)',
                      color: 'var(--text-muted)'
                    }}
                  >
                    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                  </button>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Document Upload Section */}
      {currentView === 'documents' && (
        <div className="p-6">
          <input
            type="file"
            accept=".pdf"
            multiple
            onChange={handleFileUpload}
            ref={fileInputRef}
            className="hidden"
          />
          <button
            onClick={() => fileInputRef.current?.click()}
            className="w-full py-4 px-6 rounded-2xl font-semibold button-hover-lift focus-emerald shadow-md text-white"
            style={{ 
              background: 'linear-gradient(135deg, var(--emerald-500), var(--emerald-600))',
              fontFamily: 'Poppins, sans-serif'
            }}
          >
            <div className="flex items-center justify-center space-x-3">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2.5} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
              </svg>
              <span>Upload PDF Documents</span>
            </div>
          </button>
          
          {/* Upload Progress Display */}
          {uploadProgress > 0 && (
            <div className="mt-4">
              <div className="flex justify-between text-sm font-medium mb-2" 
                   style={{ color: 'var(--text-secondary)' }}>
                <span>Processing document...</span>
                <span>{uploadProgress}%</span>
              </div>
              <div className="w-full rounded-full h-3 shadow-inner" 
                   style={{ background: 'var(--gray-200)' }}>
                <div
                  className="progress-bar h-3 rounded-full transition-all duration-300"
                  style={{ width: `${uploadProgress}%` }}
                ></div>
              </div>
            </div>
          )}
        </div>
      )}

      {/* Enhanced Stats Footer */}
      <div className="p-6 border-t" style={{ 
        borderColor: 'var(--gray-200)', 
        background: 'var(--bg-tertiary)' 
      }}>
        <div className="flex items-center justify-center space-x-6 text-sm">
          <div className="flex items-center space-x-2 px-3 py-2 rounded-xl" 
               style={{ background: 'var(--bg-primary)', color: 'var(--text-secondary)' }}>
            <div className="w-2 h-2 rounded-full" style={{ background: 'var(--emerald-500)' }}></div>
            <span className="font-medium">{chatSessions.length} Chats</span>
          </div>
          <div className="flex items-center space-x-2 px-3 py-2 rounded-xl" 
               style={{ background: 'var(--bg-primary)', color: 'var(--text-secondary)' }}>
            <div className="w-2 h-2 rounded-full" style={{ background: 'var(--emerald-600)' }}></div>
            <span className="font-medium">{documents.length} Documents</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Sidebar;
